-----------자바 이론---------------------------

1. 객체 지향 프로그래밍(OOP)
필요한 데이터와 코드를 묶어 하나의 객체로 만들고,
이 객체들 간 상호작용을 하도록 프로그램을 만드는 방식

여러개의 기능을 하는 대상들을 가져와 원하는 순서와,
기능에 맞게 연결해서 사용.

Java에서의 객체 : 클래스, 함수, 변수

장점 : 
코드를 재사용하는데 용이하다.
예시) 수를 입력받는 코드 4줄을 반복하는 것 보다는
수를 입력받는 메소드를 하나 만들어서,
여러번 반복하는게 더 낫다.
또한, 이러한 경우 수정을 원할 때 코드 전체 수정보다는
메소드를 수정하게 되면 더 편리하다는 장점이 있다.
=> 유지 보수가 쉽다.

각 부품별로 기능을 하기 때문에 어떠한 규칙만 만들어지면
여러 사람들이 각자 부품을 만들어도 하나로 모으기 쉽다.
=> 대형 프로젝트 및 프로그램을 만들기 적합하다.

단점 : 처리 속도가 느리다.
여러 객체를 왔다갔다 하면서 처리를 해야 하기 때문에 
처리속도가 다른 자원들에 비해서 느리다.
+ 객체가 많아지면 용량도 늘어나고, 
설계와 구상이 상당히 어렵다는 단점이 있다.

그럼에도 불구하고 프로그래밍하기 쉽고, 한 번 적응하면
원리가 쉽고 간편해 큰 프로그램을 만들기 쉽다는 장점으로
Java를 많이 사용하고 있다.

# 클래스, 인스턴스
# 추상화
# 캡슐화
# 상속
# 다형성
---------------------------------------------------------------
2. 클래스 == 타입
Java에서 다루는 하나의 큰 객체
어떤 객체에 대한 특성과 특징을 정해두는 틀

예시)
클래스 이름 : Student
사용 가능 변수 : 총 5개
public class Student {
	
	private int age;
	private String name;
	private String schoolName;
	private int personalNumber;
	private int phoneNumber;
	
	public Student( ) {
	
	}	
}

Student kim = new Student();
Student lee = new Student();
=>인스턴스

스코프 : 어떤 객체를 사용할 수 있는 범위
필드 : 모든 중괄호 사이
전역 변수 : 클래스 전체에서 공유하는 변수
지역 변수 : 어떠한 함수에서만 사용하는 변수